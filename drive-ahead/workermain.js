"use strict";{let t=!1,e=null;function IsAbsoluteURL(t){return/^(?:[a-z\-]+:)?\/\//.test(t)||"data:"===t.substr(0,5)||"blob:"===t.substr(0,5)}function IsRelativeURL(t){return!IsAbsoluteURL(t)}async function LoadScripts(t){if(1===t.length){const e=t[0];await import((IsRelativeURL(e)?"./":"")+e)}else{const e=t.map(t=>`import "${IsRelativeURL(t)?"./":""}${t}";`).join("\n"),r=URL.createObjectURL(new Blob([e],{type:"application/javascript"}));await import(r)}}async function InitRuntime(r){if(t)throw new Error("already initialised");t=!0;const i=r.messagePort,o=r.baseUrl,n=r.exportType;self.devicePixelRatio=r.devicePixelRatio;const s=r.workerDependencyScripts.map(t=>{let e=t;return t instanceof Blob?URL.createObjectURL(t):new URL(e,o).toString()}),a=[];self.runOnStartup=function(t){if("function"!=typeof t)throw new Error("runOnStartup called without a function");a.push(t)};const c=r.engineScripts.map(t=>new URL(t,o).toString());try{await LoadScripts([...s,...c])}catch(t){return void console.error("[C3 runtime] Failed to load all engine scripts in worker: ",t)}const p=r.projectScriptsStatus;self.C3_ProjectScriptsStatus=p;const l=r.mainProjectScript,u=r.projectScripts;for(let[t,e]of u)if(e||(e=t),t===l)try{await LoadScripts([e]),"preview"!==n||p[t]||ReportProjectMainScriptError(t,"main script did not run to completion",i)}catch(e){ReportProjectMainScriptError(t,e,i)}else("scriptsInEvents.js"===t||t.endsWith("/scriptsInEvents.js"))&&await LoadScripts([e]);if(r.runOnStartupFunctions=a,"preview"===n&&"object"!=typeof self.C3.ScriptsInEvents){const t="Failed to load JavaScript code used in events. Check all your JavaScript code has valid syntax.";return console.error("[C3 runtime] "+t),void i.postMessage({type:"alert-error",message:t})}i.postMessage({type:"creating-runtime"}),e=self.C3_CreateRuntime(r),await self.C3_InitRuntime(e,r)}function ReportProjectMainScriptError(t,e,r){console.error(`[Preview] Failed to load project main script (${t}): `,e);const i=`Failed to load project main script (${t}). Check all your JavaScript code has valid syntax. Press F12 and check the console for error details.`;r.postMessage({type:"alert-error",message:i})}self.addEventListener("message",t=>{const e=t.data,r=e.type;if("init-runtime"!==r)throw new Error(`unknown message '${r}'`);InitRuntime(e)}),self.c3_import=(t=>import(t))}